openapi: 3.0.0
info:
  title: FastAPI 应用程序接口文档
  description: 从 Markdown 文档提取的 OpenAPI 3.0 规范
  version: 1.0.0
  contact:
    name: API 支持
    email: support@example.com

servers:
  - url: http://localhost:14001/api
    description: 开发服务器

paths:
  /hello:
    get:
      tags:
        - Hello
      summary: 基础问候
      description: 返回简单的问候消息
      operationId: hello_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello, World!"
                    description: 问候消息

  /hello/{name}:
    get:
      tags:
        - Hello
      summary: 个性化问候
      description: 根据提供的名称返回个性化问候
      operationId: hello_name_get
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: 用户名称
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello, Alice!"
                    description: 个性化问候消息
        '404':
          description: 未找到
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not Found"
                    description: 错误消息

  /models:
    get:
      tags:
        - Models
      summary: 获取所有模型
      description: 返回系统中所有可用模型的列表
      operationId: models_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  models:
                    type: array
                    items:
                      type: string
                    example: ["gpt-3.5-turbo", "gpt-4", "claude-2"]
                    description: 模型名称列表

  /models/{model_id}:
    get:
      tags:
        - Models
      summary: 获取特定模型信息
      description: 返回指定模型的详细信息
      operationId: models_model_id_get
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: 模型ID
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "gpt-4"
                    description: 模型ID
                  name:
                    type: string
                    example: "GPT-4"
                    description: 模型名称
                  description:
                    type: string
                    example: "最先进的语言模型"
                    description: 模型描述
        '404':
          description: 模型未找到
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Model not found"
                    description: 错误消息

  /hooks:
    get:
      tags:
        - Hooks
      summary: 获取所有钩子
      description: 返回系统中所有可用的钩子
      operationId: hooks_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  hooks:
                    type: array
                    items:
                      type: string
                    example: ["before", "after"]
                    description: 钩子名称列表

  /hooks/{hook_id}:
    get:
      tags:
        - Hooks
      summary: 获取特定钩子信息
      description: 返回指定钩子的详细信息
      operationId: hooks_hook_id_get
      parameters:
        - name: hook_id
          in: path
          required: true
          schema:
            type: string
          description: 钩子ID
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "before"
                    description: 钩子ID
                  name:
                    type: string
                    example: "前置钩子"
                    description: 钩子名称
                  description:
                    type: string
                    example: "在请求处理前执行"
                    description: 钩子描述
        '404':
          description: 钩子未找到
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Hook not found"
                    description: 错误消息

  /rules:
    get:
      tags:
        - Rules
      summary: 获取所有规则
      description: 返回系统中所有规则的列表
      operationId: rules_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  rules:
                    type: array
                    items:
                      type: string
                    example: ["authentication", "authorization"]
                    description: 规则名称列表

  /rules/{rule_id}:
    get:
      tags:
        - Rules
      summary: 获取特定规则信息
      description: 返回指定规则的详细信息
      operationId: rules_rule_id_get
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            type: string
          description: 规则ID
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "authentication"
                    description: 规则ID
                  name:
                    type: string
                    example: "认证规则"
                    description: 规则名称
                  description:
                    type: string
                    example: "用户认证相关规则"
                    description: 规则描述
        '404':
          description: 规则未找到
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Rule not found"
                    description: 错误消息

  /commands:
    get:
      tags:
        - Commands
      summary: 获取所有命令
      description: 返回系统中所有可用命令的列表
      operationId: commands_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  commands:
                    type: array
                    items:
                      type: string
                    example: ["start", "stop", "restart"]
                    description: 命令名称列表

  /commands/{command_id}:
    get:
      tags:
        - Commands
      summary: 获取特定命令信息
      description: 返回指定命令的详细信息
      operationId: commands_command_id_get
      parameters:
        - name: command_id
          in: path
          required: true
          schema:
            type: string
          description: 命令ID
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "start"
                    description: 命令ID
                  name:
                    type: string
                    example: "启动命令"
                    description: 命令名称
                  description:
                    type: string
                    example: "启动应用程序"
                    description: 命令描述
        '404':
          description: 命令未找到
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Command not found"
                    description: 错误消息

  /roles:
    get:
      tags:
        - Roles
      summary: 获取所有角色
      description: 返回系统中所有角色的列表
      operationId: roles_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: string
                    example: ["admin", "user", "guest"]
                    description: 角色名称列表

  /roles/{role_id}:
    get:
      tags:
        - Roles
      summary: 获取特定角色信息
      description: 返回指定角色的详细信息
      operationId: roles_role_id_get
      parameters:
        - name: role_id
          in: path
          required: true
          schema:
            type: string
          description: 角色ID
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "admin"
                    description: 角色ID
                  name:
                    type: string
                    example: "管理员"
                    description: 角色名称
                  permissions:
                    type: array
                    items:
                      type: string
                    example: ["read", "write", "delete"]
                    description: 权限列表
        '404':
          description: 角色未找到
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Role not found"
                    description: 错误消息

  /configurations:
    get:
      tags:
        - Configurations
      summary: 获取所有配置
      description: 返回系统中所有配置项的列表
      operationId: configurations_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  configurations:
                    type: array
                    items:
                      type: string
                    example: ["database", "server", "security"]
                    description: 配置项名称列表

  /configurations/{config_id}:
    get:
      tags:
        - Configurations
      summary: 获取特定配置信息
      description: 返回指定配置的详细信息
      operationId: configurations_config_id_get
      parameters:
        - name: config_id
          in: path
          required: true
          schema:
            type: string
          description: 配置ID
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "database"
                    description: 配置ID
                  name:
                    type: string
                    example: "数据库配置"
                    description: 配置名称
                  value:
                    type: string
                    example: "postgresql://localhost:5432/mydb"
                    description: 配置值
        '404':
          description: 配置未找到
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Configuration not found"
                    description: 错误消息

  /import:
    post:
      tags:
        - Import/Export
      summary: 导入数据
      description: 导入数据到系统中
      operationId: import_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: 要导入的数据
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "数据导入成功"
                    description: 响应消息
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid data format"
                    description: 错误消息

  /export:
    get:
      tags:
        - Import/Export
      summary: 导出数据
      description: 从系统导出数据
      operationId: export_get
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: 导出的数据

  /execute:
    post:
      tags:
        - Command Execution
      summary: 执行命令
      description: 在系统中执行指定的命令
      operationId: execute_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  description: 要执行的命令
                parameters:
                  type: object
                  description: 命令参数
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  output:
                    type: string
                    example: "Command executed successfully"
                    description: 命令输出
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid command"
                    description: 错误消息
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Command execution failed"
                    description: 错误消息

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: 错误消息
        detail:
          type: string
          description: 错误详情
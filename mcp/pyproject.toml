[project]
name = "lazygopher"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "faker>=37.5.3",
    "pydantic>=2.11.7",
    "pytest-progress>=1.3.0",
    "pyyaml>=6.0.2",
    "requests>=2.32.4",
    "requests-mock>=1.12.1",
    "shutup>=0.2.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.3.0",
    "pytest-progress>=1.2.5",
    "rich>=13.0.0",
    "requests-mock>=1.11.0",
    "faker>=19.0.0",
    "black>=23.0.0",
    "ruff>=0.0.280",
]

dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.3.0",
    "pytest-progress>=1.2.5",
    "rich>=13.0.0",
    "requests-mock>=1.11.0",
    "faker>=19.0.0",
    "black>=23.0.0",
    "ruff>=0.0.280",
    "ipython>=8.14.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/test/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

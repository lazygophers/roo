name: CI/CD Pipeline

on:
  push:
    branches: [master, luoxin]
    tags: ['v*']
  pull_request:
    branches: [master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python & Node.js
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: |
          uv sync
          cd frontend && npm ci

      - name: Run tests
        run: |
          uv run pytest tests/ -x --tb=short
          cd frontend && npm test -- --watchAll=false --passWithNoTests

  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    outputs:
      image-tags: ${{ steps.meta.outputs.tags }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Comment PR with image info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const imageName = `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}`;
            const comment = `## 🐳 Docker镜像构建完成

            **预览镜像**: \`${imageName}\`

            **快速启动**:
            \`\`\`bash
            docker run -d -p 8000:8000 ${imageName}
            \`\`\``;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  release:
    if: github.event_name == 'push' && contains(fromJSON('["refs/heads/master", "refs/heads/luoxin"]'), github.ref)
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: version
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          version=${latest#v}
          IFS='.' read -r major minor patch <<< "$version"
          new_version="v$major.$minor.$((patch + 1))"
          echo "version=$new_version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: LazyAI Studio ${{ steps.version.outputs.version }}
          body: |
            ## 🚀 LazyAI Studio ${{ steps.version.outputs.version }}

            ### 📦 Docker镜像
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker run -d -p 8000:8000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ```

            ### 🔗 访问地址
            - 🏠 主应用: http://localhost:8000
            - 📖 API文档: http://localhost:8000/docs

            ---
            🤖 **LazyGophers出品** - 让AI替你思考，让工具替你工作！
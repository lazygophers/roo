name: PR Preview Build

on:
  pull_request:
    branches:
      - master
      - luoxin

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # PR预览构建
  pr-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract PR metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr

      - name: Build Docker image for PR
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const imageName = "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}";

            const comment = `
            ## 🐳 PR预览构建完成

            **Docker镜像已构建完成！**

            ### 📦 预览镜像
            \`\`\`bash
            docker pull ${imageName}
            \`\`\`

            ### 🏃 快速启动预览
            \`\`\`bash
            docker run -d -p 8000:8000 ${imageName}
            \`\`\`

            ### 🌐 访问预览
            启动后访问: http://localhost:8000

            ---
            🤖 此镜像仅用于预览，合并后将自动发布正式版本。
            `;

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # 快速测试
  quick-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv sync

      - name: Run quick tests
        run: uv run pytest tests/ -x --tb=short -m "not slow"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend linting
        run: |
          cd frontend
          npm run test -- --watchAll=false --passWithNoTests